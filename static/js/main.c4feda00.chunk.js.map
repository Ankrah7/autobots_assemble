{"version":3,"sources":["Card.js","CardArray.js","SearchBox.js","Scroll.js","ErrorBoundary.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","id","name","email","CardArray","_ref","robots","cardComponent","map","user","i","src_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","_super","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","then","Response","json","users","_this3","filteredRobots","filter","toLowerCase","includes","length","src_SearchBox","src_Scroll","src_ErrorBoundary","src_CardArray","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c4feda00.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n//An alternative is to destructure and use the props directly ie const card = ({name, email, id}) => {\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${props.id}?200x200`} />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardArray = ({robots}) => {\r\n    const cardComponent = robots.map((user, i) => {\r\n        return (<Card \r\n            key={i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}\r\n            />\r\n        );\r\n    });\r\n    return (\r\n        <div>\r\n           {cardComponent} \r\n        </div>\r\n    );\r\n}\r\n\r\n//A cleaner way to do it\r\n//const CardArray = ({robots}) => {\r\n  //  return(\r\n    //    <div>\r\n      //      {\r\n        //        robots.map((user, i) => {\r\n          //          return (\r\n            //        <Card \r\n              //          key={i} \r\n                //        id={robots[i].id} \r\n                  //      name={robots[i].name} \r\n                    //    email={robots[i].email}\r\n                    //  />\r\n                 //    );\r\n              //  })\r\n           // }\r\n        //  </div>\r\n   // );\r\n//}\r\n\r\nexport default CardArray;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div>\r\n            <input \r\n                className = 'bg-white dib br3 pa3 ma2 bw2'\r\n                type='search' \r\n                placeholder='Call An Autobot' \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY:'scroll',  border:'1px solid black', height:'1000px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>Ooops. Error Detected</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardArray from './CardArray';\r\n//import {robots} from './robots';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll'\r\nimport ErrorBoundary from './ErrorBoundary';\r\nimport './app.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            //robots: robots,\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response => {\r\n            return Response.json();})\r\n        .then(users =>{\r\n            (this.setState({robots: users}))});\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        if(this.state.robots.length === 0) {\r\n            return <h1>Loading</h1>\r\n        }else {\r\n            return(\r\n                <div className = 'tc'>\r\n                    <h1 className='f1'>Autobots</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                        <CardArray robots={filteredRobots} />\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nreportWebVitals();\n"],"sourceRoot":""}